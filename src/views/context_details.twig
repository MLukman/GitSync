{% import "macros.twig" as m %}

{% extends "content.twig" %}

{% set unsync = (modifications|length > 0) %}

{% block belowtopmenu %}
	<div id="pagetab" class="ui tabular large menu" style="margin: 0; padding: 5px 2em 0 2em; background-color: #e0e0ff;">
		<a class="{% if not unsync %}active {% endif %} item" data-tab="info"><i class="ui info icon"></i> Info
			{% if context.isDirty() %}
				<div class="ui red label"><i class="warning sign icon"></i>Unsync</div>
			{% endif %}
			{% if not context.isLatest() %}
				<div class="ui orange label"><i class="warning sign icon"></i>Outdated</div>
			{% endif %}
		</a>
		{% if unsync %}
			<a class="active item" data-tab="unsync"><i class="warning sign icon"></i> Unsync <span class="ui red circular tiny label">{{modifications|length}}</span></a>
			{% endif %}
		<a class="item" data-tab="revisions"><i class="tag icon"></i> Revisions</a>
		{% if auditlog %}
			<a class="item" data-tab="auditlog"><i class="clock icon"></i> Audit Log</a>
		{% endif %}
	</div>
	<div style="height: 0.5em; background-color: white"></div>
{% endblock %}

{% block content %}
	<script>
		var formatDate = (d, f) => f.replace(/{(.+?):?(\d*)}/g, (v, c, p) => {
				for (v = d["get" + c]() + /h/.test(c) + ""; v.length < p; v = 0 + v)
					;
				return v
			});
		$(function () {
			$('#pagetab.menu .item').tab({
				history: true,
				historyType: 'hash'
			});
			$('#revisions thead').hide();
			var revisions = $('#revisions tbody');
			revisions.append($('<tr />').append($('<td colspan="5" style="font-size: 200%; text-align: center" />').text('Loading ...')));
			$.ajax('{{app.path('context_revisions', {'ctxid': ctxid})}}', {
				success: function (result, status, xhr) {
					var syncurl = "{{app.path('context_presync', {'ctxid': ctxid, 'ref': '__ref__'})}}";
					$('#revisions thead').show();
					revisions.empty();
					data = result.revisions;
					for (var i = 0; i < data.length; i++) {
						var tr = $('<tr />');
						if (!data[i].inbranch) {
							tr.addClass('negative');
						} else if (data[i].active) {
							tr.addClass('active');
						}
						var timestamp = new Date(data[i].timestamp * 1000);
						tr.append($('<td class="collapsing" />').text(formatDate(timestamp, "{FullYear}-{Month:2}-{Date:2} {Hours:2}:{Minutes:2}:{Seconds:2}")));
						var ref = $('<td class="center aligned collapsing" />');
						if (data[i].tags.length > 0) {
							for (var j = 0; j < data[i].tags.length; j++) {
								ref.append($('<span class="ui blue tag label" />').text(data[i].tags[j]));
							}
						} else {
							ref.text(data[i].sha);
						}
						tr.append(ref);
						tr.append($('<td />').text(data[i].committer));
		{% if true or app.securilex.isGranted('prefix','context_presync') %}
							tr.append($('<td />').text(data[i].message));
							var sync = $('<td class="ui center aligned collapsing" / >');
							if (data[i].active && !result.dirty) {
								if (!data[i].inbranch || !result.latest) {
									sync.append($('<div class="ui orange label"><i class="warning sign icon"></i>Outdated</div>'));
								} else {
									sync.append($('<div class="ui label green"><i class="check circle icon"></i>OK</div>'));
								}
							} else {
								sync.append($('<button onclick="presync(\'' + data[i].ref + '\')" class="ui button" />').append('Sync'));
							}
							tr.append(sync);
		{% else %}
							tr.append($('<td colspan="2" />').text(data[i].message));
		{% endif %}
							revisions.append(tr);
						}
					}
				});
			});

			function presync(ref) {
				var syncurl = "{{app.path('context_dosync', {'ctxid': ctxid, 'ref': '__ref__'})}}";
				var presync = "{{app.path('context_presyncAjax', {'ctxid': ctxid, 'ref': '__ref__'})}}";
				$('#sync_form').attr('action', syncurl.replace('__ref__', ref));
				$('.presync_ref').text(ref);
				$('#presync').modal('show');
				$('#presync_content').text('Loading ...');
				$.ajax(presync.replace('__ref__', ref), {
					success: function (data, status, xhr) {
						var statusMap = {
							'': 'Staged',
							'M': 'Modified',
							'A': 'Added',
							'D': 'Deleted',
							'R': 'Renamed',
							'C': 'Copied',
							'?': 'New'
						};
						var area = $('#presync_content');
						area.empty();
						var accord = $('<div class="ui styled fluid accordion" />');
						if (data.modifications.length > 0) {
							var modthead = $('<thead><tr><th>Status</th><th>Filename with path</th><th>Modified</th></tr></thead>')
							var modtbody = $('<tbody />');
							for (var i = 0; i < data.modifications.length; i++) {
								modtbody.append($('<tr />')
										.append($('<td class="collapsing" />').text(statusMap[data.modifications[i].status]))
										.append($('<td />').text(data.modifications[i].filename))
										.append($('<td class="collapsing" />').text(data.modifications[i].modtime))
										);
							}
							var item = $('<div class="title">').append($('<i class="dropdown icon"></i>')).append($('<span />').text('All untracked changes in the directory will be reverted'));
							var modtable = $('<table class="ui celled striped compact red table" />')
									.append(modthead).append(modtbody);
							var content = $('<div class="content" />').append(modtable);
							accord.append(item).append(content);
						}
						for (var i = 0; i < data.diff.length; i++) {
							var item = $('<div class="title">').append($('<i class="dropdown icon"></i>'));
							var desc = '';
							switch (data.diff[i].mode) {
								case 'renamed_file':
									desc = data.diff[i].orig_path + ' will be renamed as ' + data.diff[i].dest_path;
									break;
								case 'new_file':
									desc = data.diff[i].orig_path + ' will be added';
									break;
								case 'deleted_file':
									desc = data.diff[i].orig_path + ' will be deleted';
									break;
								default:
									desc = data.diff[i].orig_path + ' will be modified';
							}
							item.append($('<span />').text(desc));
							var content = $('<div class="content" />');
							for (var j = 0; j < data.diff[i].chunks.length; j++) {
								content.append($('<p />').text('Chunk #' + (j + 1)));
								content.append($('<pre class="ui segment" />').text(data.diff[i].chunks[j]));
							}
							accord.append(item).append(content);
						}
						area.append(accord);
						accord.accordion({
							onOpen: function () {
								$('#presync').modal('refresh');
							}
						});
						$('#presync').modal('refresh');
					}
				});
			}
	</script>

	<div class="ui tab active" data-tab="info">
		{% set info = { 
			'Local Path': context.getPath(),
			'Remote Repository': context.getRemoteURL(), 
			'Repository Branch': context.getBranchName(), 
			'Current Revision': head.getMessage(),
			'Revision Date': head.getDatetimeCommitter().format('Y-m-d H:i:s') } %}
		<div class="ui large relaxed divided list">
			{% for label,value in info %}
				<div class="item">
					<i class="right triangle icon"></i>
					<div class="content">					
						<div class="header">{{label}}</div>
						<div class="description">{{value}}</div>
					</div>
				</div>
			{% endfor %}
		</div>
	</div>

	{% if unsync %}
		<div class="ui tab basic segment" data-tab="unsync">
			<p>The following direct modifications to files have been found:</p>
			{{ m.modificationTable(modifications) }}
		</div>
	{% endif %}

	<div class="ui tab" data-tab="revisions">
		{% if true or app.securilex.isGranted('prefix','context_refresh') %}
			<form style="padding-bottom: 10pt" method="get" action="{{app.path('context_refresh', {'ctxid': ctxid})}}" onsubmit="$('#dimmer_refresh').dimmer('show');
					return true;">
				<input type="hidden" name="redirect" value="{{app.path('context_details', {'ctxid': ctxid})}}#/revisions" />
				<input id="refreshbutton" type="submit" class="ui primary button right floated" value="Refresh from Remote Repositories" />
			</form>
		{% endif %}
		<p>Choose from the list of revisions below to sync with:</p>
		<table class="ui selectable celled striped sortable blue table" id="revisions">
			<thead>
				<tr>
					<th>Timestamp</th>
					<th>Tag/SHA</th>
					<th>Committer</th>
					<th colspan="2">Message</th>
				</tr>
			</thead>
			<tbody>
			</tbody>
		</table>
	</div>

	{% if auditlog %}
		<div class="ui tab" data-tab="auditlog">
			<p>The following events have occurred via GitSync:</p>
			<table class="ui celled striped sortable orange table">
				<thead>
					<tr>
						<th>Timestamp</th>
						<th>Event</th>
						<th>From</th>
						<th>To</th>
						<th>By</th>
					</tr>
				</thead>
				<tbody>
					{% for audit in auditlog %}
						<tr>
							<td class="collapsing">{{audit.datetime.format('Y-m-d H:i:s')}}</td>
							<td class="collapsing">{{audit.event}}</td>
							<td{% if audit.from == audit.to or not audit.from %} colspan="2"{% endif %}>{{audit.from ?: audit.to}}</td>
							{% if audit.from != audit.to and audit.from %}<td>{{audit.to}}</td>{% endif %}
							<td class="collapsing">{{audit.uid}}</td>
						</tr>
					{% endfor %}
				</tbody>
			</table>
		</div>
	{% endif %}

	<div id="dimmer_refresh" class="ui page dimmer">
		<div class="content">
			<div class="center">
				<h2 class="ui inverted icon header">
					<i class="refresh icon"></i>
					Refresh in progress
					<div class="sub header">Please wait for a while ...</div>
				</h2>
			</div>
		</div>
	</div>

	<div class="ui modal scrolling" id="presync">
		<div class="header">
			Upon syncing with <span class="presync_ref"></span>, the followings will occur:
		</div>
		<div class="scrolling content" id="presync_content">
		</div>
		<div class="actions">
			<form id="sync_form" action="/GitSync/ctx/GS/sync/1.0.0" method="post" onsubmit="return confirm('Sync with 1.0.0?');">
				<input type="hidden" name="redirect" value="/GitSync/ctx/GS/#/revisions">
				<input type="hidden" name="ref" value="1.0.0">
				<input type="submit" class="ui primary button" value="Proceed to Sync">
				<button class="ui cancel button secondary" onclick="return false">Cancel</button>
			</form>
		</div>
	</div>

	<style>
		#revisions tbody .active {
			background-color: #e0e0ff !important;
		}

		pre {
			overflow: auto;
		}
	</style>
{% endblock %}